// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

enum Role {
  STUDENT
  TEACHER
}

model User {
  id            Int       @id @default(autoincrement())
  email         String    @unique
  password      String
  role          Role      @default(STUDENT)
  specialism    String    @default("Software Developer")
  profile       Profile?
  cohortId      Int?
  cohorts       Cohort[]
  posts         Post[]
  comments      Comment[]
  deliveryLogs  DeliveryLog[]
  specialism    String
}

model Profile {
  id                Int       @id @default(autoincrement())
  userId            Int       @unique
  user              User      @relation(fields: [userId], references: [id])
  firstName         String    @default("")
  lastName          String    @default("")
  username          String    @default("")
  githubUsername    String    @default("")
  bio               String    @default("")
  profilePicture    String    @default("")
  mobile            String    @default("")
}

model Cohort {
  id           Int           @id @default(autoincrement())
  name         String
  startDate    DateTime     @default(now())
  endDate      DateTime     @default(now())
  createdAt    DateTime     @default(now())
  updatedAt    DateTime     @updatedAt
  users        User[]
  deliveryLogs DeliveryLog[] // keep
}

model Post {
  id        Int           @id @default(autoincrement())
  content   String
  createdAt DateTime      @default(now())
  updatedAt DateTime      @updatedAt
  userId    Int
  user      User          @relation(fields: [userId], references: [id])
  comments  Comment[]
}

model Comment {
  id        Int       @id @default(autoincrement())
  content   String
  userId    Int
  user      User      @relation(fields: [userId], references: [id])
  postId    Int
  post      Post      @relation(fields: [postId], references: [id])
  createdAt DateTime  @default(now())
}

model DeliveryLog {
  id        Int           @id @default(autoincrement())
  date      DateTime
  userId    Int
  user      User          @relation(fields: [userId], references: [id])
  cohortId  Int
  cohort    Cohort        @relation(fields: [cohortId], references: [id])
  lines     DeliveryLogLine[]
}

model DeliveryLogLine {
  id        Int           @id @default(autoincrement())
  content   String
  logId     Int
  log       DeliveryLog   @relation(fields: [logId], references: [id])
}
